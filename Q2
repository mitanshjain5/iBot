Mitansh Jain
AM25B018
24/10/25

PSEUDOCODE:

Given:A grid of size (n+1) × (n+1)
      Start point = (0, 0)
      Goal point = (n, n)
      Movements allowed = Up, Down, Left, Right

Initialization:
  Create an empty queue to store cells to explore.
  Create a visited matrix of size (n+1)×(n+1), initially all False.
  Create a parent matrix to store the cell from which each cell was reached (for path reconstruction).
  Mark the start cell (0,0) as visited and enqueue it.

Exploration:
While queue is not empty:
 a. Dequeue the current cell.
 b. If the current cell = (n, n), stop- goal reached.
 c. Else, for each of the 4 possible moves (up, down, left, right):
  1. Compute the neighbor cell coordinates.
  2. If the neighbor cell is inside the grid and not visited:
   - Mark it as visited
   - Record its parent as the current cell
   - Enqueue it for later exploration

Path Reconstruction
Once (n,n) is reached, backtrack using the parent matrix from (n,n) to (0,0) to reconstruct the shortest path.
Output this path as the robot’s planned route.

End Condition
If the queue becomes empty and (n,n) was not reached, then no path exists (obstacle).
